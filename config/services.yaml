# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    standard_fee_percent: 10.0
    discounted_fee_percent: 5.0

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    PaymentsAPI\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    PaymentsAPI\Infrastructure\Http\Controller\:
        resource: '../src/Infrastructure/Http/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    PaymentsAPI\Domain\Service\FeeCalculator: '@PaymentsAPI\Domain\Service\FeeCalculator\VolumeDiscountedCalculator'

    PaymentsAPI\Domain\Service\FeeCalculator\VolumeDiscountedCalculator:
        arguments:
            $defaultFeeCalculator: '@PaymentsAPI\Domain\Service\FeeCalculator\StandardFeeCalculator'
            $discountedFeeCalculator: '@PaymentsAPI\Domain\Service\FeeCalculator\DiscountedFeeCalculator'

    PaymentsAPI\Domain\Service\FeeCalculator\StandardFeeCalculator:
        class: PaymentsAPI\Domain\Service\FeeCalculator\PercentageFeeCalculator
        arguments:
            $feePercent: '%standard_fee_percent%'

    PaymentsAPI\Domain\Service\FeeCalculator\DiscountedFeeCalculator:
        class: PaymentsAPI\Domain\Service\FeeCalculator\PercentageFeeCalculator
        arguments:
            $feePercent: '%discounted_fee_percent%'

    Money\MoneyParser: '@Money\Parser\DecimalMoneyParser'

    Money\Parser\DecimalMoneyParser:
        arguments:
            $currencies: '@Money\Currencies\ISOCurrencies'

    Money\MoneyFormatter: '@Money\Formatter\DecimalMoneyFormatter'

    Money\Formatter\DecimalMoneyFormatter:
        arguments:
            $currencies: '@Money\Currencies\ISOCurrencies'

    Money\Currencies\ISOCurrencies:
        class: Money\Currencies\ISOCurrencies
